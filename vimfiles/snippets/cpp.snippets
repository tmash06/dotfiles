# Read File Into Vector
snippet readfile
	vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}
# std::map
snippet map
	map<${1:key}, ${2:value}> map${3};
# std::vector
snippet vector
	vector<${1:char}> v${2};
# Namespace
snippet ns
	namespace ${1:`Filename('', 'my')`} {
		${2}
	} /* $1 */
# Class
snippet cl
	class ${1:`Filename('$1_t', 'name')`} {
	public:
		$1 (${2:arguments});
		virtual ~$1 ();

	private:
		${3:/* data */}
	};
# BOOST_FOREACH
snippet bforeach
	BOOST_FOREACH(${1:Element}, ${2:List}){

    }

# TEST
snippet test
	TEST(${1}, ${2}){
		${3:/* code */}
    }

snippet eeq
    EXPECT_EQ(${1:Expect}, ${2:Actual});

snippet eet
    EXPECT_TRUE(${1});

# #include <...>
snippet inc
	#include <${1}>${2}
